{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/olof.marklund/Documents/projects/my_projects/olofsbaljor/olofsbaljor/components/Recipe.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { documentToReactComponents } from '@contentful/rich-text-react-renderer';\nimport { getEntry } from '../lib/api';\nimport NutrientTable from '../components/NutrientTable';\nexport default function Recipe(_x) {\n  return _Recipe.apply(this, arguments);\n}\n_c2 = Recipe;\n\nfunction _Recipe() {\n  _Recipe = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(props) {\n    var title, description, ingredientsDisplay, instructionsDisplay, nutrients;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            title = props.recipe.title;\n            description = documentToReactComponents(props.recipe.descriptionRt);\n            ingredientsDisplay = documentToReactComponents(props.recipe.ingredientsRt);\n            instructionsDisplay = documentToReactComponents(props.recipe.instructionsRt);\n            _context.next = 6;\n            return Object.keys(props.recipe.nutrients).map(function (key) {\n              return [key, props.recipe.nutrients[key]];\n            });\n\n          case 6:\n            nutrients = _context.sent;\n            console.log('Nutrients: ', nutrients);\n            /* console.log('value: ', props.recipe.ingredientsRt.content[0].content[0].content[0].content[1].content[0].value);\n            console.log('XXXXXX: ', props.recipe.ingredientsRt.content[0].content[1].content[0].content);\n            console.log('XXXXXX: ', props.recipe.ingredientsRt.content[0].content[0].content[0].content);\n             \n            console.log('Titel: ', title);\n            console.log('Description: ', description);\n            console.log('ingredients: ', ingredients);\n            console.log('instructions: ', instructions); */\n\n            return _context.abrupt(\"return\", __jsx(\"div\", {\n              id: title,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 26,\n                columnNumber: 9\n              }\n            }, __jsx(\"h1\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 27,\n                columnNumber: 13\n              }\n            }, title), __jsx(\"h2\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 28,\n                columnNumber: 13\n              }\n            }, description), __jsx(\"div\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 29,\n                columnNumber: 13\n              }\n            }, __jsx(\"h3\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 17\n              }\n            }, \"Ingredients\"), ingredientsDisplay), __jsx(\"div\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 13\n              }\n            }, __jsx(\"h3\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 17\n              }\n            }, \" How to\"), __jsx(\"p\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 17\n              }\n            }, instructionsDisplay)), __jsx(NutrientTable, {\n              recipeTitle: 'Hej',\n              nutrients: 12,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 13\n              }\n            })));\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this);\n  }));\n  return _Recipe.apply(this, arguments);\n}\n\n_c = Recipe;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Recipe\");\n$RefreshReg$(_c2, \"Recipe\");","map":{"version":3,"sources":["/Users/olof.marklund/Documents/projects/my_projects/olofsbaljor/olofsbaljor/components/Recipe.js"],"names":["documentToReactComponents","getEntry","NutrientTable","Recipe","props","title","recipe","description","descriptionRt","ingredientsDisplay","ingredientsRt","instructionsDisplay","instructionsRt","Object","keys","nutrients","map","key","console","log"],"mappings":";;;;;AAAA,SAASA,yBAAT,QAA0C,sCAA1C;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,wBAA8BC,MAA9B;AAAA;AAAA;MAA8BA,M;;;qEAAf,iBAAsBC,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AACLC,YAAAA,KADK,GACGD,KAAK,CAACE,MAAN,CAAaD,KADhB;AAGLE,YAAAA,WAHK,GAGSP,yBAAyB,CAACI,KAAK,CAACE,MAAN,CAAaE,aAAd,CAHlC;AAILC,YAAAA,kBAJK,GAIgBT,yBAAyB,CAACI,KAAK,CAACE,MAAN,CAAaI,aAAd,CAJzC;AAKLC,YAAAA,mBALK,GAKiBX,yBAAyB,CAACI,KAAK,CAACE,MAAN,CAAaM,cAAd,CAL1C;AAAA;AAAA,mBAMaC,MAAM,CAACC,IAAP,CAAYV,KAAK,CAACE,MAAN,CAAaS,SAAzB,EAAoCC,GAApC,CAAyC,UAACC,GAAD;AAAA,qBAAS,CAACA,GAAD,EAAMb,KAAK,CAACE,MAAN,CAAaS,SAAb,CAAuBE,GAAvB,CAAN,CAAT;AAAA,aAAzC,CANb;;AAAA;AAMLF,YAAAA,SANK;AAOXG,YAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BJ,SAA3B;AAIA;;;;;;;;;AAXW,6CAsBP;AAAK,cAAA,EAAE,EAAEV,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAKA,KAAL,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAKE,WAAL,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADJ,EAEKE,kBAFL,CAHJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACKE,mBADL,CAFJ,CAPJ,EAaI,MAAC,aAAD;AAAe,cAAA,WAAW,EAAE,KAA5B;AAAmC,cAAA,SAAS,EAAE,EAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbJ,CAtBO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;KAAeR,M","sourcesContent":["import { documentToReactComponents } from '@contentful/rich-text-react-renderer';\nimport { getEntry } from '../lib/api'\nimport NutrientTable from '../components/NutrientTable'\nexport default async function Recipe(props){\n    const title = props.recipe.title\n\n    const description = documentToReactComponents(props.recipe.descriptionRt) \n    const ingredientsDisplay = documentToReactComponents(props.recipe.ingredientsRt)\n    const instructionsDisplay = documentToReactComponents(props.recipe.instructionsRt)     \n    const nutrients = await Object.keys(props.recipe.nutrients).map( (key) => [key, props.recipe.nutrients[key]])\n    console.log('Nutrients: ', nutrients);\n    \n\n\n    /* console.log('value: ', props.recipe.ingredientsRt.content[0].content[0].content[0].content[1].content[0].value);\n    console.log('XXXXXX: ', props.recipe.ingredientsRt.content[0].content[1].content[0].content);\n    console.log('XXXXXX: ', props.recipe.ingredientsRt.content[0].content[0].content[0].content);\n\n    \n    console.log('Titel: ', title);\n    console.log('Description: ', description);\n    console.log('ingredients: ', ingredients);\n    console.log('instructions: ', instructions); */\n\n    return (\n        <div id={title}>\n            <h1>{title}</h1>\n            <h2>{description}</h2>\n            <div>\n                <h3>Ingredients</h3>\n                {ingredientsDisplay}\n            </div>\n            <div>\n                <h3> How to</h3>\n                <p>\n                    {instructionsDisplay}\n                </p>\n            </div>\n            <NutrientTable recipeTitle={'Hej'} nutrients={12}/>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}