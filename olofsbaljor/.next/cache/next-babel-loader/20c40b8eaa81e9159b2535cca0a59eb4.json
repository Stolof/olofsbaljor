{"ast":null,"code":"var _jsxFileName = \"/Users/olof.marklund/Documents/projects/my_projects/olofsbaljor/olofsbaljor/components/recipe.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { documentToHtmlString } from '@contentful/rich-text-html-renderer';\nexport default async function Recipe({\n  recipe\n}) {\n  const title = recipe.title;\n  const description = recipe.description;\n  const ingredients = recipe.ingredients;\n  const instructions = recipe.ingredients;\n  const descriptionRT = recipe.descriptionRt;\n  /* documentToHtmlString(recipe.ingredientsRt).then( renderedHtml => {\n      document.getElementById('rich-text-body').innerHTML = renderedHtml;\n  }) */\n\n  let renderedHtml = documentToHtmlString(recipe.ingredientsRt);\n  document.getElementById('rich-text-body').innerHTML = renderedHtml;\n  const instructionsRT = recipe.ingredientsRt;\n  console.log('RECIPE: ', recipe);\n  console.log('Titel: ', title);\n  console.log('Description: ', description);\n  console.log('ingredients: ', ingredients);\n  console.log('instructions: ', instructions);\n  console.log('DescriptionRT: ', descriptionRT);\n  console.log('ingredientsRT: ', ingredientsRT);\n  console.log('instructionsRT: ', instructionsRT);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, title), __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, description), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }, \"Ingredients\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }, ingredients), __jsx(\"div\", {\n    id: \"rich-text-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  })), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, \" How to\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, instructions)));\n}","map":{"version":3,"sources":["/Users/olof.marklund/Documents/projects/my_projects/olofsbaljor/olofsbaljor/components/recipe.js"],"names":["documentToHtmlString","Recipe","recipe","title","description","ingredients","instructions","descriptionRT","descriptionRt","renderedHtml","ingredientsRt","document","getElementById","innerHTML","instructionsRT","console","log","ingredientsRT"],"mappings":";;;AAAA,SAASA,oBAAT,QAAqC,qCAArC;AAEA,eAAe,eAAeC,MAAf,CAAsB;AAACC,EAAAA;AAAD,CAAtB,EAA+B;AAC1C,QAAMC,KAAK,GAAGD,MAAM,CAACC,KAArB;AACA,QAAMC,WAAW,GAAGF,MAAM,CAACE,WAA3B;AACA,QAAMC,WAAW,GAAGH,MAAM,CAACG,WAA3B;AACA,QAAMC,YAAY,GAAGJ,MAAM,CAACG,WAA5B;AAEA,QAAME,aAAa,GAAGL,MAAM,CAACM,aAA7B;AACA;;;;AAGA,MAAIC,YAAY,GAAGT,oBAAoB,CAACE,MAAM,CAACQ,aAAR,CAAvC;AACAC,EAAAA,QAAQ,CAACC,cAAT,CAAwB,gBAAxB,EAA0CC,SAA1C,GAAsDJ,YAAtD;AACA,QAAMK,cAAc,GAAGZ,MAAM,CAACQ,aAA9B;AAEAK,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBd,MAAxB;AACAa,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBb,KAAvB;AACAY,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BZ,WAA7B;AACAW,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BX,WAA7B;AACAU,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BV,YAA9B;AAEAS,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BT,aAA/B;AACAQ,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BC,aAA/B;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCF,cAAhC;AAEA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKX,KAAL,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKC,WAAL,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIC,WAAJ,CAFJ,EAGI;AAAK,IAAA,EAAE,EAAC,gBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CAHJ,EAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKC,YADL,CAFA,CARJ,CADJ;AAiBH","sourcesContent":["import { documentToHtmlString } from '@contentful/rich-text-html-renderer';\n\nexport default async function Recipe({recipe}){\n    const title = recipe.title\n    const description = recipe.description\n    const ingredients = recipe.ingredients\n    const instructions = recipe.ingredients\n\n    const descriptionRT = recipe.descriptionRt\n    /* documentToHtmlString(recipe.ingredientsRt).then( renderedHtml => {\n        document.getElementById('rich-text-body').innerHTML = renderedHtml;\n    }) */\n    let renderedHtml = documentToHtmlString(recipe.ingredientsRt)\n    document.getElementById('rich-text-body').innerHTML = renderedHtml;\n    const instructionsRT = recipe.ingredientsRt\n\n    console.log('RECIPE: ', recipe);\n    console.log('Titel: ', title);\n    console.log('Description: ', description);\n    console.log('ingredients: ', ingredients);\n    console.log('instructions: ', instructions);\n    \n    console.log('DescriptionRT: ', descriptionRT);\n    console.log('ingredientsRT: ', ingredientsRT);\n    console.log('instructionsRT: ', instructionsRT);\n\n    return (\n        <div>\n            <h1>{title}</h1>\n            <h2>{description}</h2>\n            <div>\n                <h3>Ingredients</h3>\n                <p>{ingredients}</p>\n                <div id=\"rich-text-body\"></div>\n            </div>\n            <div>\n            <h3> How to</h3>\n            <p>\n                {instructions}\n            </p>\n            </div>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}