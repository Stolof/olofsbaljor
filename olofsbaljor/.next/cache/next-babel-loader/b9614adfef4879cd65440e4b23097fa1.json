{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/olof.marklund/Documents/projects/my_projects/olofsbaljor/olofsbaljor/components/recipe.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { documentToHtmlString } from '@contentful/rich-text-html-renderer';\nexport default function Recipe(_x) {\n  return _Recipe.apply(this, arguments);\n}\n_c2 = Recipe;\n\nfunction _Recipe() {\n  _Recipe = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n    var recipe, title, description, ingredients, instructions, descriptionRT, renderedHtml, instructionsRT;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            recipe = _ref.recipe;\n            title = recipe.title;\n            description = recipe.description;\n            ingredients = recipe.ingredients;\n            instructions = recipe.ingredients;\n            descriptionRT = recipe.descriptionRt;\n            /* documentToHtmlString(recipe.ingredientsRt).then( renderedHtml => {\n                document.getElementById('rich-text-body').innerHTML = renderedHtml;\n            }) */\n\n            renderedHtml = documentToHtmlString(recipe.ingredientsRt);\n            document.getElementById('rich-text-body').innerHTML = renderedHtml;\n            instructionsRT = recipe.ingredientsRt;\n            console.log('RECIPE: ', recipe);\n            console.log('Titel: ', title);\n            console.log('Description: ', description);\n            console.log('ingredients: ', ingredients);\n            console.log('instructions: ', instructions);\n            console.log('DescriptionRT: ', descriptionRT);\n            console.log('ingredientsRT: ', ingredientsRT);\n            console.log('instructionsRT: ', instructionsRT);\n            return _context.abrupt(\"return\", __jsx(\"div\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 28,\n                columnNumber: 9\n              }\n            }, __jsx(\"h1\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 29,\n                columnNumber: 13\n              }\n            }, title), __jsx(\"h2\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 13\n              }\n            }, description), __jsx(\"div\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 13\n              }\n            }, __jsx(\"h3\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 17\n              }\n            }, \"Ingredients\"), __jsx(\"p\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 17\n              }\n            }, ingredients), __jsx(\"div\", {\n              id: \"rich-text-body\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 17\n              }\n            })), __jsx(\"div\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 13\n              }\n            }, __jsx(\"h3\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 13\n              }\n            }, \" How to\"), __jsx(\"p\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 13\n              }\n            }, instructions))));\n\n          case 18:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this);\n  }));\n  return _Recipe.apply(this, arguments);\n}\n\n_c = Recipe;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Recipe\");\n$RefreshReg$(_c2, \"Recipe\");","map":{"version":3,"sources":["/Users/olof.marklund/Documents/projects/my_projects/olofsbaljor/olofsbaljor/components/recipe.js"],"names":["documentToHtmlString","Recipe","recipe","title","description","ingredients","instructions","descriptionRT","descriptionRt","renderedHtml","ingredientsRt","document","getElementById","innerHTML","instructionsRT","console","log","ingredientsRT"],"mappings":";;;;;AAAA,SAASA,oBAAT,QAAqC,qCAArC;AAEA,wBAA8BC,MAA9B;AAAA;AAAA;MAA8BA,M;;;qEAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuBC,YAAAA,MAAvB,QAAuBA,MAAvB;AACLC,YAAAA,KADK,GACGD,MAAM,CAACC,KADV;AAELC,YAAAA,WAFK,GAESF,MAAM,CAACE,WAFhB;AAGLC,YAAAA,WAHK,GAGSH,MAAM,CAACG,WAHhB;AAILC,YAAAA,YAJK,GAIUJ,MAAM,CAACG,WAJjB;AAMLE,YAAAA,aANK,GAMWL,MAAM,CAACM,aANlB;AAOX;;;;AAGIC,YAAAA,YAVO,GAUQT,oBAAoB,CAACE,MAAM,CAACQ,aAAR,CAV5B;AAWXC,YAAAA,QAAQ,CAACC,cAAT,CAAwB,gBAAxB,EAA0CC,SAA1C,GAAsDJ,YAAtD;AACMK,YAAAA,cAZK,GAYYZ,MAAM,CAACQ,aAZnB;AAcXK,YAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBd,MAAxB;AACAa,YAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBb,KAAvB;AACAY,YAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BZ,WAA7B;AACAW,YAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BX,WAA7B;AACAU,YAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BV,YAA9B;AAEAS,YAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BT,aAA/B;AACAQ,YAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BC,aAA/B;AACAF,YAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCF,cAAhC;AAtBW,6CAyBP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAKX,KAAL,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAKC,WAAL,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAIC,WAAJ,CAFJ,EAGI;AAAK,cAAA,EAAE,EAAC,gBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,CAHJ,EAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACKC,YADL,CAFA,CARJ,CAzBO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;KAAeL,M","sourcesContent":["import { documentToHtmlString } from '@contentful/rich-text-html-renderer';\n\nexport default async function Recipe({recipe}){\n    const title = recipe.title\n    const description = recipe.description\n    const ingredients = recipe.ingredients\n    const instructions = recipe.ingredients\n\n    const descriptionRT = recipe.descriptionRt\n    /* documentToHtmlString(recipe.ingredientsRt).then( renderedHtml => {\n        document.getElementById('rich-text-body').innerHTML = renderedHtml;\n    }) */\n    let renderedHtml = documentToHtmlString(recipe.ingredientsRt)\n    document.getElementById('rich-text-body').innerHTML = renderedHtml;\n    const instructionsRT = recipe.ingredientsRt\n\n    console.log('RECIPE: ', recipe);\n    console.log('Titel: ', title);\n    console.log('Description: ', description);\n    console.log('ingredients: ', ingredients);\n    console.log('instructions: ', instructions);\n    \n    console.log('DescriptionRT: ', descriptionRT);\n    console.log('ingredientsRT: ', ingredientsRT);\n    console.log('instructionsRT: ', instructionsRT);\n\n    return (\n        <div>\n            <h1>{title}</h1>\n            <h2>{description}</h2>\n            <div>\n                <h3>Ingredients</h3>\n                <p>{ingredients}</p>\n                <div id=\"rich-text-body\"></div>\n            </div>\n            <div>\n            <h3> How to</h3>\n            <p>\n                {instructions}\n            </p>\n            </div>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}