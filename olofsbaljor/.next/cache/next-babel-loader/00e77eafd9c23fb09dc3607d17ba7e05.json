{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/esm/asyncToGenerator\"));\n\nvar _contentful = require(\"contentful\");\n\nvar client = (0, _contentful.createClient)({\n  space: process.env.NEXT_PUBLIC_CONTENTFUL_SPACE_ID,\n  accessToken: process.env.NEXT_PUBLIC_CONTENTFUL_ACCESS_TOKEN\n});\n\nfunction getEntry(_x) {\n  return _getEntry.apply(this, arguments);\n}\n\nfunction _getEntry() {\n  _getEntry = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2(id) {\n    var recipe;\n    return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return client.getEntry(id);\n\n          case 2:\n            recipe = _context2.sent;\n            return _context2.abrupt(\"return\", parseForm(recipe));\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _getEntry.apply(this, arguments);\n}\n\nfunction getAllRecipes() {\n  return _getAllRecipes.apply(this, arguments);\n}\n\nfunction _getAllRecipes() {\n  _getAllRecipes = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee3() {\n    var recipes;\n    return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return client.getEntries({\n              'content_type': 'recipe'\n            });\n\n          case 2:\n            recipes = _context3.sent;\n            return _context3.abrupt(\"return\", recipes);\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _getAllRecipes.apply(this, arguments);\n}\n\nfunction parseForm(recipe) {\n  return {\n    recipe: recipe.fields\n  };\n}\n\nfunction getNutrientForAllRecipes(_x2) {\n  return _getNutrientForAllRecipes.apply(this, arguments);\n}\n\nfunction _getNutrientForAllRecipes() {\n  _getNutrientForAllRecipes = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee4(recipes) {\n    var nutrientsPerRecipe;\n    return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            nutrientsPerRecipe = {};\n            recipes.forEach(function (recipe) {\n              var ingredients = recipe.fields.ingredients;\n              nutrientsPerRecipe[recipe.fields.title] = getNutrientsForRecipe(ingredients);\n            });\n            return _context4.abrupt(\"return\", nutrientsPerRecipe);\n\n          case 3:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _getNutrientForAllRecipes.apply(this, arguments);\n}\n\nvar getNutrientsForRecipe = /*#__PURE__*/function () {\n  var _ref = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(ingredients) {\n    var recipeNutrients;\n    return _regenerator[\"default\"].wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            recipeNutrients = {};\n            ingredients.forEach(function (i) {\n              var productId = i.fields.id; // const productName = i.fields.name\n\n              var productNutrients = getNutrientsForProduct(productId);\n              console.log('Product Nutrients: ', productNutrients);\n              productNutrients.forEach(function (nutrient) {\n                recipeNutrients[nutrient.name] += nutrient.value;\n              });\n            });\n            return _context.abrupt(\"return\", recipeNutrients);\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getNutrientsForRecipe(_x3) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nfunction getNutrientsForProduct(_x4) {\n  return _getNutrientsForProduct.apply(this, arguments);\n}\n\nfunction _getNutrientsForProduct() {\n  _getNutrientsForProduct = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee5(productId) {\n    var livsmedelkollenAPI, res, nutrients;\n    return _regenerator[\"default\"].wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            livsmedelkollenAPI = 'https://api.livsmedelkollen.se/foodstuffs/';\n            _context5.prev = 1;\n            _context5.next = 4;\n            return fetch(livsmedelkollenAPI + \"881\", {\n              method: 'GET',\n              headers: {\n                'Content-Type': 'application/json'\n              }\n            });\n\n          case 4:\n            res = _context5.sent;\n            _context5.next = 7;\n            return res.json();\n\n          case 7:\n            nutrients = _context5.sent;\n            return _context5.abrupt(\"return\", nutrients);\n\n          case 11:\n            _context5.prev = 11;\n            _context5.t0 = _context5[\"catch\"](1);\n            console.log('ERROR: ', _context5.t0);\n\n          case 14:\n            return _context5.abrupt(\"return\", 'Hej');\n\n          case 15:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5, null, [[1, 11]]);\n  }));\n  return _getNutrientsForProduct.apply(this, arguments);\n}\n\nmodule.exports = {\n  getEntry: getEntry,\n  getAllRecipes: getAllRecipes,\n  getNutrientForAllRecipes: getNutrientForAllRecipes\n};","map":{"version":3,"sources":["/Users/olof.marklund/Documents/projects/my_projects/olofsbaljor/olofsbaljor/lib/api.js"],"names":["client","space","process","env","NEXT_PUBLIC_CONTENTFUL_SPACE_ID","accessToken","NEXT_PUBLIC_CONTENTFUL_ACCESS_TOKEN","getEntry","id","recipe","parseForm","getAllRecipes","getEntries","recipes","fields","getNutrientForAllRecipes","nutrientsPerRecipe","forEach","ingredients","title","getNutrientsForRecipe","recipeNutrients","i","productId","productNutrients","getNutrientsForProduct","console","log","nutrient","name","value","livsmedelkollenAPI","fetch","method","headers","res","json","nutrients","module","exports"],"mappings":";;;;;;;;AAAA;;AAEA,IAAMA,MAAM,GAAG,8BAAa;AAC1BC,EAAAA,KAAK,EAAEC,OAAO,CAACC,GAAR,CAAYC,+BADO;AAE1BC,EAAAA,WAAW,EAAEH,OAAO,CAACC,GAAR,CAAYG;AAFC,CAAb,CAAf;;SAKeC,Q;;;;;4FAAf,kBAAwBC,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACyBR,MAAM,CAACO,QAAP,CAAgBC,EAAhB,CADzB;;AAAA;AACUC,YAAAA,MADV;AAAA,8CAEWC,SAAS,CAACD,MAAD,CAFpB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAKeE,a;;;;;iGAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAC0BX,MAAM,CAACY,UAAP,CAAkB;AAAC,8BAAgB;AAAjB,aAAlB,CAD1B;;AAAA;AACUC,YAAAA,OADV;AAAA,8CAEWA,OAFX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAKA,SAASH,SAAT,CAAmBD,MAAnB,EAA2B;AACvB,SAAO;AACHA,IAAAA,MAAM,EAAEA,MAAM,CAACK;AADZ,GAAP;AAGH;;SAEcC,wB;;;;;4GAAf,kBAAwCF,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AACMG,YAAAA,kBADN,GAC2B,EAD3B;AAEEH,YAAAA,OAAO,CAACI,OAAR,CAAgB,UAAAR,MAAM,EAAI;AACxB,kBAAMS,WAAW,GAAGT,MAAM,CAACK,MAAP,CAAcI,WAAlC;AACAF,cAAAA,kBAAkB,CAACP,MAAM,CAACK,MAAP,CAAcK,KAAf,CAAlB,GAA0CC,qBAAqB,CAACF,WAAD,CAA/D;AACD,aAHD;AAFF,8CAMSF,kBANT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AASA,IAAMI,qBAAqB;AAAA,2FAAG,iBAAeF,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACxBG,YAAAA,eADwB,GACN,EADM;AAE5BH,YAAAA,WAAW,CAACD,OAAZ,CAAoB,UAAAK,CAAC,EAAI;AACvB,kBAAMC,SAAS,GAAGD,CAAC,CAACR,MAAF,CAASN,EAA3B,CADuB,CAEvB;;AACA,kBAAMgB,gBAAgB,GAAGC,sBAAsB,CAACF,SAAD,CAA/C;AACAG,cAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCH,gBAAnC;AAEAA,cAAAA,gBAAgB,CAACP,OAAjB,CAAyB,UAAAW,QAAQ,EAAI;AACnCP,gBAAAA,eAAe,CAACO,QAAQ,CAACC,IAAV,CAAf,IAAkCD,QAAQ,CAACE,KAA3C;AACD,eAFD;AAGD,aATD;AAF4B,6CAYrBT,eAZqB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAArBD,qBAAqB;AAAA;AAAA;AAAA,GAA3B;;SAeeK,sB;;;;;0GAAf,kBAAsCF,SAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AACQQ,YAAAA,kBADR,GAC6B,4CAD7B;AAAA;AAAA;AAAA,mBAGsBC,KAAK,CAACD,kBAAkB,GAAG,KAAtB,EAA4B;AACjDE,cAAAA,MAAM,EAAE,KADyC;AAEjDC,cAAAA,OAAO,EAAE;AAAC,gCAAgB;AAAjB;AAFwC,aAA5B,CAH3B;;AAAA;AAGUC,YAAAA,GAHV;AAAA;AAAA,mBAO4BA,GAAG,CAACC,IAAJ,EAP5B;;AAAA;AAOUC,YAAAA,SAPV;AAAA,8CAQWA,SARX;;AAAA;AAAA;AAAA;AAUIX,YAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;;AAVJ;AAAA,8CAcS,KAdT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAkBAW,MAAM,CAACC,OAAP,GAAiB;AACfhC,EAAAA,QAAQ,EAAEA,QADK;AAEfI,EAAAA,aAAa,EAAEA,aAFA;AAGfI,EAAAA,wBAAwB,EAAEA;AAHX,CAAjB","sourcesContent":["import { createClient } from 'contentful'\n\nconst client = createClient({\n  space: process.env.NEXT_PUBLIC_CONTENTFUL_SPACE_ID,\n  accessToken: process.env.NEXT_PUBLIC_CONTENTFUL_ACCESS_TOKEN,\n})\n\nasync function getEntry(id) {\n    const recipe = await client.getEntry(id)\n    return parseForm(recipe)\n  }\n\nasync function getAllRecipes() {\n    const recipes = await client.getEntries({'content_type': 'recipe'})\n    return recipes\n  }\n\nfunction parseForm(recipe) {\n    return {\n        recipe: recipe.fields,\n    }\n}\n\nasync function getNutrientForAllRecipes(recipes){\n  let nutrientsPerRecipe = {}\n  recipes.forEach(recipe => {\n    const ingredients = recipe.fields.ingredients\n    nutrientsPerRecipe[recipe.fields.title] = getNutrientsForRecipe(ingredients)\n  });\n  return nutrientsPerRecipe\n}\n\nconst getNutrientsForRecipe = async function(ingredients){\n  let recipeNutrients = { }\n  ingredients.forEach(i => {\n    const productId = i.fields.id\n    // const productName = i.fields.name\n    const productNutrients = getNutrientsForProduct(productId)\n    console.log('Product Nutrients: ', productNutrients);\n    \n    productNutrients.forEach(nutrient => {\n      recipeNutrients[nutrient.name] += nutrient.value\n    });\n  });\n  return recipeNutrients\n}\n\nasync function getNutrientsForProduct(productId){\n  const livsmedelkollenAPI = 'https://api.livsmedelkollen.se/foodstuffs/'\n  try {\n    const res = await fetch(livsmedelkollenAPI + \"881\",{\n      method: 'GET',\n      headers: {'Content-Type': 'application/json'}\n    })\n    const nutrients = await res.json()\n    return nutrients\n  } catch (err) {\n    console.log('ERROR: ', err);\n    \n\n  }\n  return 'Hej'\n}\n\n\nmodule.exports = {\n  getEntry: getEntry,\n  getAllRecipes: getAllRecipes,\n  getNutrientForAllRecipes: getNutrientForAllRecipes,\n}"]},"metadata":{},"sourceType":"script"}