{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/esm/asyncToGenerator\"));\n\nvar _contentful = require(\"contentful\");\n\nvar client = (0, _contentful.createClient)({\n  space: process.env.NEXT_PUBLIC_CONTENTFUL_SPACE_ID,\n  accessToken: process.env.NEXT_PUBLIC_CONTENTFUL_ACCESS_TOKEN\n});\n\nfunction getEntry(_x) {\n  return _getEntry.apply(this, arguments);\n}\n\nfunction _getEntry() {\n  _getEntry = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(id) {\n    var recipe;\n    return _regenerator[\"default\"].wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return client.getEntry(id);\n\n          case 2:\n            recipe = _context.sent;\n            return _context.abrupt(\"return\", parseForm(recipe));\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getEntry.apply(this, arguments);\n}\n\nfunction getAllRecipes() {\n  return _getAllRecipes.apply(this, arguments);\n}\n\nfunction _getAllRecipes() {\n  _getAllRecipes = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2() {\n    var recipes;\n    return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return client.getEntries({\n              'content_type': 'recipe'\n            });\n\n          case 2:\n            recipes = _context2.sent;\n            return _context2.abrupt(\"return\", recipes);\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _getAllRecipes.apply(this, arguments);\n}\n\nfunction parseForm(recipe) {\n  return {\n    recipe: recipe.fields\n  };\n}\n\nfunction getNutrientForAllRecipes(_x2) {\n  return _getNutrientForAllRecipes.apply(this, arguments);\n}\n\nfunction _getNutrientForAllRecipes() {\n  _getNutrientForAllRecipes = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee4(recipes) {\n    var nutrientsPerRecipe;\n    return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            nutrientsPerRecipe = {};\n            _context4.next = 3;\n            return recipes.forEach( /*#__PURE__*/function () {\n              var _ref = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee3(recipe) {\n                var ingredients, recipeNutrients;\n                return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n                  while (1) {\n                    switch (_context3.prev = _context3.next) {\n                      case 0:\n                        ingredients = recipe.fields.ingredients;\n                        _context3.next = 3;\n                        return getNutrientsForRecipe(ingredients);\n\n                      case 3:\n                        recipeNutrients = _context3.sent;\n                        console.log('Nutrient RECIPE: ', recipeNutrients); // const result = await Promise.all(recipeNutrients)\n\n                        nutrientsPerRecipe[recipe.fields.title] = recipeNutrients;\n\n                      case 6:\n                      case \"end\":\n                        return _context3.stop();\n                    }\n                  }\n                }, _callee3);\n              }));\n\n              return function (_x5) {\n                return _ref.apply(this, arguments);\n              };\n            }());\n\n          case 3:\n            _context4.next = 5;\n            return nutrientsPerRecipe;\n\n          case 5:\n            return _context4.abrupt(\"return\", _context4.sent);\n\n          case 6:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _getNutrientForAllRecipes.apply(this, arguments);\n}\n\nfunction getNutrientsForRecipe(_x3) {\n  return _getNutrientsForRecipe.apply(this, arguments);\n}\n\nfunction _getNutrientsForRecipe() {\n  _getNutrientsForRecipe = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee6(ingredients) {\n    var recipeNutrients;\n    return _regenerator[\"default\"].wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            console.log('1');\n            recipeNutrients = {};\n            _context6.next = 4;\n            return ingredients.forEach( /*#__PURE__*/function () {\n              var _ref2 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee5(i) {\n                var productId, productNutrients;\n                return _regenerator[\"default\"].wrap(function _callee5$(_context5) {\n                  while (1) {\n                    switch (_context5.prev = _context5.next) {\n                      case 0:\n                        console.log('2');\n                        productId = i.fields.id; // const productName = i.fields.name\n\n                        _context5.next = 4;\n                        return getNutrientsForProduct(productId);\n\n                      case 4:\n                        productNutrients = _context5.sent;\n                        console.log('productNutrient:');\n                        _context5.next = 8;\n                        return productNutrients.forEach(function (nutrient) {\n                          // console.log('Nutrient: ', nutrient.name);\n                          recipeNutrients[nutrient.name] = nutrient.value;\n                        });\n\n                      case 8:\n                      case \"end\":\n                        return _context5.stop();\n                    }\n                  }\n                }, _callee5);\n              }));\n\n              return function (_x6) {\n                return _ref2.apply(this, arguments);\n              };\n            }());\n\n          case 4:\n            _context6.next = 6;\n            return recipeNutrients;\n\n          case 6:\n            return _context6.abrupt(\"return\", _context6.sent);\n\n          case 7:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n  return _getNutrientsForRecipe.apply(this, arguments);\n}\n\nfunction getNutrientsForProduct(_x4) {\n  return _getNutrientsForProduct.apply(this, arguments);\n}\n\nfunction _getNutrientsForProduct() {\n  _getNutrientsForProduct = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee7(productId) {\n    var livsmedelkollenAPI, res, nutrients;\n    return _regenerator[\"default\"].wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            console.log('3');\n            livsmedelkollenAPI = 'https://api.livsmedelkollen.se/foodstuffs/';\n            _context7.next = 4;\n            return fetch(livsmedelkollenAPI + \"881\", {\n              method: 'GET',\n              headers: {\n                'Content-Type': 'application/json'\n              }\n            });\n\n          case 4:\n            res = _context7.sent;\n            console.log('4');\n            _context7.next = 8;\n            return res.json();\n\n          case 8:\n            nutrients = _context7.sent;\n            _context7.next = 11;\n            return nutrients;\n\n          case 11:\n            return _context7.abrupt(\"return\", _context7.sent);\n\n          case 12:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7);\n  }));\n  return _getNutrientsForProduct.apply(this, arguments);\n}\n\nmodule.exports = {\n  getEntry: getEntry,\n  getAllRecipes: getAllRecipes,\n  getNutrientForAllRecipes: getNutrientForAllRecipes\n};","map":{"version":3,"sources":["/Users/olof.marklund/Documents/projects/my_projects/olofsbaljor/olofsbaljor/lib/api.js"],"names":["client","space","process","env","NEXT_PUBLIC_CONTENTFUL_SPACE_ID","accessToken","NEXT_PUBLIC_CONTENTFUL_ACCESS_TOKEN","getEntry","id","recipe","parseForm","getAllRecipes","getEntries","recipes","fields","getNutrientForAllRecipes","nutrientsPerRecipe","forEach","ingredients","getNutrientsForRecipe","recipeNutrients","console","log","title","i","productId","getNutrientsForProduct","productNutrients","nutrient","name","value","livsmedelkollenAPI","fetch","method","headers","res","json","nutrients","module","exports"],"mappings":"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","sourcesContent":["import { createClient } from 'contentful'\n\nconst client = createClient({\n  space: process.env.NEXT_PUBLIC_CONTENTFUL_SPACE_ID,\n  accessToken: process.env.NEXT_PUBLIC_CONTENTFUL_ACCESS_TOKEN,\n})\n\nasync function getEntry(id) {\n    const recipe = await client.getEntry(id)\n    return parseForm(recipe)\n  }\n\nasync function getAllRecipes() {\n    const recipes = await client.getEntries({'content_type': 'recipe'})\n    return recipes\n  }\n\nfunction parseForm(recipe) {\n    return {\n        recipe: recipe.fields,\n    }\n}\n\nasync function getNutrientForAllRecipes(recipes){\n  let nutrientsPerRecipe = {}\n  await recipes.forEach(async recipe => {\n    const ingredients = recipe.fields.ingredients\n    const recipeNutrients = await getNutrientsForRecipe(ingredients)\n    console.log('Nutrient RECIPE: ', recipeNutrients )\n    // const result = await Promise.all(recipeNutrients)\n    nutrientsPerRecipe[recipe.fields.title] = recipeNutrients\n  });\n  return await nutrientsPerRecipe\n}\n\nasync function getNutrientsForRecipe(ingredients) {\n  console.log('1');\n  \n  let recipeNutrients = {}\n  await ingredients.forEach(async i => {\n    console.log('2');\n    const productId = i.fields.id\n    // const productName = i.fields.name\n    const productNutrients = await getNutrientsForProduct(productId) \n      console.log('productNutrient:' );\n      await productNutrients.forEach(nutrient => {\n        // console.log('Nutrient: ', nutrient.name);\n        \n        recipeNutrients[nutrient.name] = nutrient.value\n      });\n    // await getNutrientsForProduct(productId).then( async (productNutrients) => {\n      // console.log('productNutrient:' );\n      // await productNutrients.forEach(nutrient => {\n        // // console.log('Nutrient: ', nutrient.name);\n        \n        // recipeNutrients[nutrient.name] = nutrient.value\n      // });\n    // })\n  });\n  return await recipeNutrients\n}\n\nasync function getNutrientsForProduct(productId){\n    console.log('3');\n  const livsmedelkollenAPI = 'https://api.livsmedelkollen.se/foodstuffs/'\n    const res = await fetch(livsmedelkollenAPI + \"881\",{\n      method: 'GET',\n      headers: {'Content-Type': 'application/json'}\n    })\n    console.log('4');\n    const nutrients = await res.json()\n    return await nutrients\n}\n\n\nmodule.exports = {\n  getEntry: getEntry,\n  getAllRecipes: getAllRecipes,\n  getNutrientForAllRecipes: getNutrientForAllRecipes,\n}"]},"metadata":{},"sourceType":"script"}