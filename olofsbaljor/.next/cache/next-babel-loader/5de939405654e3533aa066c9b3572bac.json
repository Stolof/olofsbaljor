{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/esm/asyncToGenerator\"));\n\nvar _contentful = require(\"contentful\");\n\nvar client = (0, _contentful.createClient)({\n  space: process.env.NEXT_PUBLIC_CONTENTFUL_SPACE_ID,\n  accessToken: process.env.NEXT_PUBLIC_CONTENTFUL_ACCESS_TOKEN\n});\n\nfunction getEntry(_x) {\n  return _getEntry.apply(this, arguments);\n}\n\nfunction _getEntry() {\n  _getEntry = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(id) {\n    var recipe;\n    return _regenerator[\"default\"].wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return client.getEntry(id);\n\n          case 2:\n            recipe = _context.sent;\n            return _context.abrupt(\"return\", parseForm(recipe));\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getEntry.apply(this, arguments);\n}\n\nfunction getAllRecipes() {\n  return _getAllRecipes.apply(this, arguments);\n}\n\nfunction _getAllRecipes() {\n  _getAllRecipes = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2() {\n    var recipes;\n    return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return client.getEntries({\n              'content_type': 'recipe'\n            });\n\n          case 2:\n            recipes = _context2.sent;\n            return _context2.abrupt(\"return\", recipes);\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _getAllRecipes.apply(this, arguments);\n}\n\nfunction parseForm(recipe) {\n  return {\n    recipe: recipe.fields\n  };\n}\n\nfunction getNutrientForAllRecipes(recipes) {}\n\nfunction getNutrientsForRecipe(ingredients) {\n  var nutrients = {};\n  ingredients.forEach(function (i) {\n    var productId = i.fields.id;\n    var productName = i.fields.name;\n    nutrients[productName] = getNutrientsForProduct(productId);\n  });\n  return nutrients;\n}\n\nfunction getNutrientsForProduct(_x2) {\n  return _getNutrientsForProduct.apply(this, arguments);\n}\n\nfunction _getNutrientsForProduct() {\n  _getNutrientsForProduct = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee3(productId) {\n    var livsmedelkollenAPI, res, nutriecients;\n    return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            livsmedelkollenAPI = 'https://api.livsmedelkollen.se/foodstuffs/';\n            _context3.next = 3;\n            return fetch(livsmedelkollenAPI + \"881\", {\n              method: 'GET',\n              headers: {\n                'Content-Type': 'application/json'\n              }\n            });\n\n          case 3:\n            res = _context3.sent;\n            _context3.next = 6;\n            return res.json();\n\n          case 6:\n            nutriecients = _context3.sent;\n            return _context3.abrupt(\"return\", nutriecients);\n\n          case 8:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _getNutrientsForProduct.apply(this, arguments);\n}\n\nmodule.exports = {\n  getEntry: getEntry,\n  getAllRecipes: getAllRecipes,\n  getNutrientsForProduct: getNutrientsForProduct\n};","map":{"version":3,"sources":["/Users/olof.marklund/Documents/projects/my_projects/olofsbaljor/olofsbaljor/lib/api.js"],"names":["client","space","process","env","NEXT_PUBLIC_CONTENTFUL_SPACE_ID","accessToken","NEXT_PUBLIC_CONTENTFUL_ACCESS_TOKEN","getEntry","id","recipe","parseForm","getAllRecipes","getEntries","recipes","fields","getNutrientForAllRecipes","getNutrientsForRecipe","ingredients","nutrients","forEach","i","productId","productName","name","getNutrientsForProduct","livsmedelkollenAPI","fetch","method","headers","res","json","nutriecients","module","exports"],"mappings":";;;;;;;;AAAA;;AAEA,IAAMA,MAAM,GAAG,8BAAa;AAC1BC,EAAAA,KAAK,EAAEC,OAAO,CAACC,GAAR,CAAYC,+BADO;AAE1BC,EAAAA,WAAW,EAAEH,OAAO,CAACC,GAAR,CAAYG;AAFC,CAAb,CAAf;;SAKeC,Q;;;;;4FAAf,iBAAwBC,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACyBR,MAAM,CAACO,QAAP,CAAgBC,EAAhB,CADzB;;AAAA;AACUC,YAAAA,MADV;AAAA,6CAEWC,SAAS,CAACD,MAAD,CAFpB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAKeE,a;;;;;iGAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAC0BX,MAAM,CAACY,UAAP,CAAkB;AAAC,8BAAgB;AAAjB,aAAlB,CAD1B;;AAAA;AACUC,YAAAA,OADV;AAAA,8CAEWA,OAFX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAKA,SAASH,SAAT,CAAmBD,MAAnB,EAA2B;AACvB,SAAO;AACHA,IAAAA,MAAM,EAAEA,MAAM,CAACK;AADZ,GAAP;AAGH;;AAED,SAASC,wBAAT,CAAkCF,OAAlC,EAA0C,CAEzC;;AACD,SAASG,qBAAT,CAA+BC,WAA/B,EAA2C;AACzC,MAAIC,SAAS,GAAG,EAAhB;AACAD,EAAAA,WAAW,CAACE,OAAZ,CAAoB,UAAAC,CAAC,EAAI;AACvB,QAAMC,SAAS,GAAGD,CAAC,CAACN,MAAF,CAASN,EAA3B;AACA,QAAMc,WAAW,GAAGF,CAAC,CAACN,MAAF,CAASS,IAA7B;AACAL,IAAAA,SAAS,CAACI,WAAD,CAAT,GAAyBE,sBAAsB,CAACH,SAAD,CAA/C;AACD,GAJD;AAKA,SAAOH,SAAP;AACD;;SAEcM,sB;;;;;0GAAf,kBAAsCH,SAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AACQI,YAAAA,kBADR,GAC6B,4CAD7B;AAAA;AAAA,mBAEoBC,KAAK,CAACD,kBAAkB,GAAG,KAAtB,EAA4B;AACjDE,cAAAA,MAAM,EAAE,KADyC;AAEjDC,cAAAA,OAAO,EAAE;AAAC,gCAAgB;AAAjB;AAFwC,aAA5B,CAFzB;;AAAA;AAEQC,YAAAA,GAFR;AAAA;AAAA,mBAM6BA,GAAG,CAACC,IAAJ,EAN7B;;AAAA;AAMQC,YAAAA,YANR;AAAA,8CAOSA,YAPT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAWAC,MAAM,CAACC,OAAP,GAAiB;AACf1B,EAAAA,QAAQ,EAAEA,QADK;AAEfI,EAAAA,aAAa,EAAEA,aAFA;AAGfa,EAAAA,sBAAsB,EAAEA;AAHT,CAAjB","sourcesContent":["import { createClient } from 'contentful'\n\nconst client = createClient({\n  space: process.env.NEXT_PUBLIC_CONTENTFUL_SPACE_ID,\n  accessToken: process.env.NEXT_PUBLIC_CONTENTFUL_ACCESS_TOKEN,\n})\n\nasync function getEntry(id) {\n    const recipe = await client.getEntry(id)\n    return parseForm(recipe)\n  }\n\nasync function getAllRecipes() {\n    const recipes = await client.getEntries({'content_type': 'recipe'})\n    return recipes\n  }\n\nfunction parseForm(recipe) {\n    return {\n        recipe: recipe.fields,\n    }\n}\n\nfunction getNutrientForAllRecipes(recipes){\n\n}\nfunction getNutrientsForRecipe(ingredients){\n  let nutrients = {}\n  ingredients.forEach(i => {\n    const productId = i.fields.id\n    const productName = i.fields.name\n    nutrients[productName] = getNutrientsForProduct(productId)\n  });\n  return nutrients\n}\n\nasync function getNutrientsForProduct(productId){\n  const livsmedelkollenAPI = 'https://api.livsmedelkollen.se/foodstuffs/'\n  const res = await fetch(livsmedelkollenAPI + \"881\",{\n    method: 'GET',\n    headers: {'Content-Type': 'application/json'}\n  })\n  const nutriecients = await res.json()\n  return nutriecients\n}\n\n\nmodule.exports = {\n  getEntry: getEntry,\n  getAllRecipes: getAllRecipes,\n  getNutrientsForProduct: getNutrientsForProduct,\n}"]},"metadata":{},"sourceType":"script"}