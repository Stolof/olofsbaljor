{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/esm/asyncToGenerator\"));\n\nvar _contentful = require(\"contentful\");\n\nvar client = (0, _contentful.createClient)({\n  space: process.env.NEXT_PUBLIC_CONTENTFUL_SPACE_ID,\n  accessToken: process.env.NEXT_PUBLIC_CONTENTFUL_ACCESS_TOKEN\n});\n\nfunction getEntry(_x) {\n  return _getEntry.apply(this, arguments);\n}\n\nfunction _getEntry() {\n  _getEntry = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(id) {\n    var recipe;\n    return _regenerator[\"default\"].wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return client.getEntry(id);\n\n          case 2:\n            recipe = _context.sent;\n            return _context.abrupt(\"return\", parseForm(recipe));\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getEntry.apply(this, arguments);\n}\n\nfunction getAllRecipes() {\n  return _getAllRecipes.apply(this, arguments);\n}\n\nfunction _getAllRecipes() {\n  _getAllRecipes = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2() {\n    var recipes;\n    return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return client.getEntries({\n              'content_type': 'recipe'\n            });\n\n          case 2:\n            recipes = _context2.sent;\n            return _context2.abrupt(\"return\", recipes);\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _getAllRecipes.apply(this, arguments);\n}\n\nfunction parseForm(recipe) {\n  return {\n    recipe: recipe.fields\n  };\n}\n\nfunction getNutrientForAllRecipes(recipes) {\n  var nutrientsPerRecipe = {};\n  recipes.forEach(function (recipe) {\n    var ingredients = recipe.fields.ingredients;\n    getNutrientsForRecipe(ingredients).then(function (recipeNutrien) {\n      console.log('Nutrient: ', recipeNutrien);\n      nutrientsPerRecipe[recipe.fields.title] = recipeNutrien;\n    });\n  });\n  return nutrientsPerRecipe;\n}\n\nvar getNutrientsForRecipe = function getNutrientsForRecipe(ingredients) {\n  var recipeNutrients = {};\n  ingredients.forEach(function (i) {\n    var productId = i.fields.id; // const productName = i.fields.name\n\n    getNutrientsForProduct(productId).then(function (productNutrients) {\n      console.log('productNutrient:');\n      productNutrients.forEach(function (nutrient) {\n        console.log('Nutrient: ', nutrient.name);\n        recipeNutrients[nutrient.name] = nutrient.value;\n      });\n    });\n  });\n  return recipeNutrients;\n};\n\nfunction getNutrientsForProduct(_x2) {\n  return _getNutrientsForProduct.apply(this, arguments);\n}\n\nfunction _getNutrientsForProduct() {\n  _getNutrientsForProduct = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee3(productId) {\n    var livsmedelkollenAPI, res, nutrients;\n    return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            livsmedelkollenAPI = 'https://api.livsmedelkollen.se/foodstuffs/';\n            _context3.prev = 1;\n            _context3.next = 4;\n            return fetch(livsmedelkollenAPI + \"881\", {\n              method: 'GET',\n              headers: {\n                'Content-Type': 'application/json'\n              }\n            });\n\n          case 4:\n            res = _context3.sent;\n            _context3.next = 7;\n            return res.json();\n\n          case 7:\n            nutrients = _context3.sent;\n            return _context3.abrupt(\"return\", nutrients);\n\n          case 11:\n            _context3.prev = 11;\n            _context3.t0 = _context3[\"catch\"](1);\n            console.log('ERROR: ', _context3.t0);\n\n          case 14:\n            return _context3.abrupt(\"return\", 'Hej');\n\n          case 15:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[1, 11]]);\n  }));\n  return _getNutrientsForProduct.apply(this, arguments);\n}\n\nmodule.exports = {\n  getEntry: getEntry,\n  getAllRecipes: getAllRecipes,\n  getNutrientForAllRecipes: getNutrientForAllRecipes\n};","map":{"version":3,"sources":["/Users/olof.marklund/Documents/projects/my_projects/olofsbaljor/olofsbaljor/lib/api.js"],"names":["client","space","process","env","NEXT_PUBLIC_CONTENTFUL_SPACE_ID","accessToken","NEXT_PUBLIC_CONTENTFUL_ACCESS_TOKEN","getEntry","id","recipe","parseForm","getAllRecipes","getEntries","recipes","fields","getNutrientForAllRecipes","nutrientsPerRecipe","forEach","ingredients","getNutrientsForRecipe","then","recipeNutrien","console","log","title","recipeNutrients","i","productId","getNutrientsForProduct","productNutrients","nutrient","name","value","livsmedelkollenAPI","fetch","method","headers","res","json","nutrients","module","exports"],"mappings":"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","sourcesContent":["import { createClient } from 'contentful'\n\nconst client = createClient({\n  space: process.env.NEXT_PUBLIC_CONTENTFUL_SPACE_ID,\n  accessToken: process.env.NEXT_PUBLIC_CONTENTFUL_ACCESS_TOKEN,\n})\n\nasync function getEntry(id) {\n    const recipe = await client.getEntry(id)\n    return parseForm(recipe)\n  }\n\nasync function getAllRecipes() {\n    const recipes = await client.getEntries({'content_type': 'recipe'})\n    return recipes\n  }\n\nfunction parseForm(recipe) {\n    return {\n        recipe: recipe.fields,\n    }\n}\n\nfunction getNutrientForAllRecipes(recipes){\n  let nutrientsPerRecipe = {}\n  recipes.forEach(recipe => {\n    const ingredients = recipe.fields.ingredients\n    getNutrientsForRecipe(ingredients).then((recipeNutrien) => {\n      console.log('Nutrient: ', recipeNutrien);\n      \n      nutrientsPerRecipe[recipe.fields.title] = recipeNutrien\n    })\n  });\n  return nutrientsPerRecipe\n}\n\nconst getNutrientsForRecipe = function(ingredients){\n  let recipeNutrients = {}\n  ingredients.forEach(i => {\n    const productId = i.fields.id\n    // const productName = i.fields.name\n    getNutrientsForProduct(productId).then((productNutrients) => {\n      console.log('productNutrient:' );\n      productNutrients.forEach(nutrient => {\n        console.log('Nutrient: ', nutrient.name);\n        \n        recipeNutrients[nutrient.name] = nutrient.value\n      });\n    })\n  });\n  return recipeNutrients\n}\n\nasync function getNutrientsForProduct(productId){\n  const livsmedelkollenAPI = 'https://api.livsmedelkollen.se/foodstuffs/'\n  try {\n    const res = await fetch(livsmedelkollenAPI + \"881\",{\n      method: 'GET',\n      headers: {'Content-Type': 'application/json'}\n    })\n    const nutrients = await res.json()\n    return nutrients\n  } catch (err) {\n    console.log('ERROR: ', err);\n  }\n  return 'Hej'\n}\n\n\nmodule.exports = {\n  getEntry: getEntry,\n  getAllRecipes: getAllRecipes,\n  getNutrientForAllRecipes: getNutrientForAllRecipes,\n}"]},"metadata":{},"sourceType":"script"}