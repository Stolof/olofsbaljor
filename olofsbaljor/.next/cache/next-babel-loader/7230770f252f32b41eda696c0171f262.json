{"ast":null,"code":"var _jsxFileName = \"/Users/olof.marklund/Documents/projects/my_projects/olofsbaljor/olofsbaljor/components/recipe.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { documentToReactComponents } from '@contentful/rich-text-react-renderer';\nimport NutrientTable from '../components/NutrientTable';\nimport EnergyPieChart from '../components/EnergyPieChart';\nimport nutrientStyle from '../styles/Nutrients.module.css';\nimport { useState } from 'react';\nexport default function Recipe(props) {\n  _s();\n\n  console.log(props.recipe.showNutrients);\n\n  var _useState = useState(props.recipe.showNutrients ? true : false),\n      showNutrients = _useState[0],\n      setShowNutrients = _useState[1];\n\n  var title = props.recipe.title;\n  var description = documentToReactComponents(props.recipe.descriptionRt);\n  var ingredientsDisplay = documentToReactComponents(props.recipe.ingredientsRt);\n  var instructionsDisplay = documentToReactComponents(props.recipe.instructionsRt);\n  var nutrients = props.recipe.nutrients;\n  var firstHalfOfNutrients = {};\n  var secondHalfOfNutrients = {};\n  var secondHalf = false;\n\n  for (var nutrient in nutrients) {\n    if (nutrient === 'Alkohol') {\n      secondHalf = true;\n    }\n\n    if (!secondHalf) {\n      firstHalfOfNutrients[nutrient] = nutrients[nutrient];\n    } else {\n      secondHalfOfNutrients[nutrient] = nutrients[nutrient];\n    }\n  }\n\n  function getEnergyNutrients(nutrients) {\n    var energyNutrients = {\n      \"Calories\": nutrients['Energi (kcal)'],\n      \"Protein\": nutrients['Protein'],\n      \"Carbohodydrates\": nutrients['Kolhydrater'],\n      \"Fat\": nutrients['Fett']\n    };\n    return energyNutrients;\n  }\n\n  return __jsx(\"div\", {\n    id: title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, title), __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, description), __jsx(\"div\", {\n    className: nutrientStyle.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, \"Ingredients\"), ingredientsDisplay), __jsx(\"div\", {\n    className: nutrientStyle.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, \" How to\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, instructionsDisplay)), __jsx(\"div\", {\n    className: nutrientStyle.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, __jsx(NutrientTable, {\n    recipeTitle: title,\n    nutrients: getEnergyNutrients(props.recipe.nutrients),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }), __jsx(EnergyPieChart, {\n    title: title + \"id\",\n    energyNutrients: getEnergyNutrients(props.recipe.nutrients),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  })), __jsx(\"a\", {\n    onClick: function onClick() {\n      return setShowNutrients(!showNutrients);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, \"Visa fler n\\xE4rings\\xE4mnen\"), showNutrients ? __jsx(\"div\", {\n    className: nutrientStyle.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, __jsx(NutrientTable, {\n    recipeTitle: title,\n    nutrients: firstHalfOfNutrients,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }), __jsx(NutrientTable, {\n    recipeTitle: title,\n    nutrients: secondHalfOfNutrients,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  })) : null);\n}\n\n_s(Recipe, \"eJ8yxhlAickqhb89U786n1Fyyfc=\");\n\n_c = Recipe;\n\nvar _c;\n\n$RefreshReg$(_c, \"Recipe\");","map":{"version":3,"sources":["/Users/olof.marklund/Documents/projects/my_projects/olofsbaljor/olofsbaljor/components/recipe.js"],"names":["documentToReactComponents","NutrientTable","EnergyPieChart","nutrientStyle","useState","Recipe","props","console","log","recipe","showNutrients","setShowNutrients","title","description","descriptionRt","ingredientsDisplay","ingredientsRt","instructionsDisplay","instructionsRt","nutrients","firstHalfOfNutrients","secondHalfOfNutrients","secondHalf","nutrient","getEnergyNutrients","energyNutrients","container"],"mappings":"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","sourcesContent":["import { documentToReactComponents } from '@contentful/rich-text-react-renderer';\nimport NutrientTable from '../components/NutrientTable'\nimport EnergyPieChart from '../components/EnergyPieChart'\nimport nutrientStyle from '../styles/Nutrients.module.css'\nimport { useState } from 'react'\n\nexport default function Recipe(props){\n    console.log(props.recipe.showNutrients);\n    \n\n    const [showNutrients, setShowNutrients] = useState(props.recipe.showNutrients ? true : false)\n\n\n    const title = props.recipe.title\n    const description = documentToReactComponents(props.recipe.descriptionRt) \n    const ingredientsDisplay = documentToReactComponents(props.recipe.ingredientsRt)\n    const instructionsDisplay = documentToReactComponents(props.recipe.instructionsRt)\n\n\n\n    const nutrients = props.recipe.nutrients\n    let firstHalfOfNutrients = {} \n    let secondHalfOfNutrients = {}\n    let secondHalf = false\n\n    for (const nutrient in nutrients) {\n        if (nutrient === 'Alkohol'){\n            secondHalf = true\n        }\n        if (!secondHalf){\n            firstHalfOfNutrients[nutrient] = nutrients[nutrient]\n        } else{\n            secondHalfOfNutrients[nutrient] = nutrients[nutrient]\n        }\n    }\n\n    function getEnergyNutrients(nutrients) {\n        const energyNutrients = {\n            \"Calories\" : nutrients['Energi (kcal)'],\n            \"Protein\" : nutrients['Protein'],\n            \"Carbohodydrates\" : nutrients['Kolhydrater'],\n            \"Fat\" : nutrients['Fett']\n        }\n        return  energyNutrients\n    }\n\n    return (\n        <div id={title}>\n            <h1>{title}</h1>\n            <h2>{description}</h2>\n      <div className={nutrientStyle.container}>\n                <h3>Ingredients</h3>\n                {ingredientsDisplay}\n            </div>\n      <div className={nutrientStyle.container}>\n                <h3> How to</h3>\n                <p>\n                    {instructionsDisplay}\n                </p>\n                </div>\n      <div className={nutrientStyle.container}>\n                <NutrientTable recipeTitle={title} nutrients={getEnergyNutrients(props.recipe.nutrients)} />\n                <EnergyPieChart title={title + \"id\"} energyNutrients={getEnergyNutrients(props.recipe.nutrients)}/>\n            </div>\n            <a onClick={() => setShowNutrients(!showNutrients)}>Visa fler näringsämnen</a>\n            { showNutrients ? \n      <div className={nutrientStyle.container}>\n                <NutrientTable recipeTitle={title} nutrients={firstHalfOfNutrients} />\n                <NutrientTable recipeTitle={title} nutrients={secondHalfOfNutrients} />\n                </div>\n            \n        : null }\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}